#!/usr/bin/env ruby
# frozen_string_literal: true

# Ruby internal
require 'pp'
# Project internal
require 'pass_station'
# External
require 'docopt'
require 'paint'

doc = <<~DOCOPT
  Pass Station

  Usage:
    pass-station update ([--force] <path> | --check)
    pass-station -h | --help
    pass-station --version

  Update options: Update the password database
    -f, --force   Bypass hash checking
    -c, --check   Check for possible update

  Other options:
    --no-color    Disable colorized output
    --debug       Display arguments
    -h, --help    Show this screen
    --version     Show version
DOCOPT

begin
  args = Docopt.docopt(doc, version: PassStation::VERSION)
  Paint.mode = 0 if args['--no-color']
  pp args if args['--debug']
  if args['update']
    if args['<path>']
      opts = {}
      opts[:sha256] = args['--force'] ? nil : PassStation::UPSTREAM_DATABASE[:HASH]
      puts '[+] Updating database'
      path = PassStation.download_upstream(args['<path>'], opts)
      if path
        puts "[+] Database updated #{path}"
      else
        puts '[+] Database already up to date'
      end
    elsif args['--check']
      if PassStation.check_for_update
        puts '[+] Update available'
      else
        puts '[+] No update available'
      end
    end
  end
rescue Docopt::Exit => e
  puts e.message
end
